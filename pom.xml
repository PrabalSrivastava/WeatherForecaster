<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ps</groupId>
	<artifactId>weather-forecaster-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>weatherforecaster</name>
	<description>City Weather Forecast Microservice This service provides a 3-day weather forecast for any city, displaying high and low temperatures. If specific weather conditions are met, such as rain, high winds, or temperatures above 40Â°C, users will receive relevant suggestions like &quot;Carry an umbrella&quot; or &quot;Use sunscreen.&quot;</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<version>5.1</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.14.0</version>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v18.19.0</nodeVersion>
							<npmVersion>10.2.3</npmVersion>
							<installDirectory>${project.basedir}/frontend</installDirectory>
							<skip>${skipInstall}</skip>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
							<workingDirectory>${project.basedir}/frontend</workingDirectory>
							<skip>${skipInstall}</skip>
						</configuration>
					</execution>
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
							<workingDirectory>${project.basedir}/frontend</workingDirectory>
						</configuration>
					</execution>
					<execution>
						<id>npm run test</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run test:headless</arguments>
							<workingDirectory>${project.basedir}/frontend</workingDirectory>
							<skip>${skipFrontendTests}</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>build-angular</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.basedir}/frontend/dist/frontend/browser</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
							<outputDirectory>${basedir}/src/main/resources/static</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.39.1</version>
				<executions>
					<execution>
						<id>build-image</id>
						<goals>
							<goal>build</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<skip>${skipDocker}</skip>
						</configuration>
					</execution>
					<execution>
						<id>push-image</id>
						<goals>
							<goal>push</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<skip>${skipDocker}</skip>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<images>
						<image>
							<name>prabalsrivastava/${project.name}:${project.version}</name>
							<build>
								<dockerFile>${project.basedir}/Dockerfile</dockerFile>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application-dev.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<finalName>${project.artifactId}-${project.version}</finalName>
	</build>

</project>
